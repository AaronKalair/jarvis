#!/usr/bin/env ruby

if RUBY_VERSION =~ /1.8/
  require 'rubygems'
end

require 'eventmachine'
require 'colored'
require 'optparse'

# Declare options hash and supply defaults
options = Hash.new(nil)
options[:port] = 1337
options[:host] = "127.0.0.1"

OptionParser.new do |opts|
  opts.on('-p', '--port PORT', 'Port number of Jarvis server.') do |port|
    options[:port] = port.to_i
  end

  opts.on('--host HOST', 'The host address of the Jarvis server.') do |host|
    options[:host] = host
  end
end.parse!

class Echo < EM::Connection
  attr_reader :queue

  def initialize(q)
    @queue = q

    cb = Proc.new do |msg|
      send_data(msg)
      q.pop &cb
    end

    q.pop &cb
  end

  def receive_data(data)
    puts data
    print "jarvis-client> ".blue
    STDOUT.flush
  end

  def unbind
    EventMachine.stop_event_loop
  end
end

class KeyboardHandler < EM::Connection
  include EM::Protocols::LineText2

  attr_reader :queue

  def initialize(q)
    @queue = q
  end

  def receive_line(data)
    @queue.push(data)
  end
end

EM.run do
  # hit Control + C to stop
  Signal.trap("INT")  { EventMachine.stop }
  Signal.trap("TERM") { EventMachine.stop }

  q = EM::Queue.new

  EM.connect(options[:host], options[:port], Echo, q)
  EM.open_keyboard(KeyboardHandler, q)

  print "jarvis-client> ".blue
  STDOUT.flush
end
